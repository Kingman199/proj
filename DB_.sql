BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS "CLIENTS" (
	"ID"	INTEGER,
	"Username"	TEXT NOT NULL UNIQUE,
	"PASSW"	TEXT NOT NULL,
	"EMAIL"	TEXT NOT NULL UNIQUE,
	"ROLE_ID"	INTEGER DEFAULT 1,
	"MANAGER_ID"	INTEGER,
	PRIMARY KEY("ID" AUTOINCREMENT),
	FOREIGN KEY("ROLE_ID") REFERENCES "ROLES"("ID")
);
CREATE TABLE IF NOT EXISTS "Client_Project_Tasks" (
	"cpt_id"	INTEGER,
	"client_id"	INTEGER NOT NULL,
	"project_id"	INTEGER NOT NULL,
	"main_task_id"	INTEGER NOT NULL,
	UNIQUE("client_id","project_id"),
	PRIMARY KEY("cpt_id" AUTOINCREMENT),
	FOREIGN KEY("client_id") REFERENCES "CLIENTS"("ID"),
	FOREIGN KEY("main_task_id") REFERENCES "Tasks"("TaskID"),
	FOREIGN KEY("project_id") REFERENCES "Projects"("ProjectID")
);
CREATE TABLE IF NOT EXISTS "Comments" (
	"id"	INTEGER,
	"task_id"	INTEGER NOT NULL,
	"user_id"	INTEGER NOT NULL,
	"content"	TEXT NOT NULL,
	"created_at"	TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY("id" AUTOINCREMENT),
	FOREIGN KEY("task_id") REFERENCES "Tasks"("TaskID") ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS "FRIENDS" (
	"ID"	INTEGER,
	"ClientID"	INTEGER NOT NULL,
	"FriendID"	INTEGER NOT NULL,
	"ProjectID"	INTEGER,
	UNIQUE("ClientID","FriendID","ProjectID"),
	PRIMARY KEY("ID" AUTOINCREMENT),
	FOREIGN KEY("ClientID") REFERENCES "CLIENTS"("ID"),
	FOREIGN KEY("FriendID") REFERENCES "CLIENTS"("ID"),
	FOREIGN KEY("ProjectID") REFERENCES "Projects"("ProjectID") ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS "FRIEND_REQUESTS" (
	"ID"	INTEGER,
	"SenderID"	INTEGER NOT NULL,
	"ReceiverEmail"	TEXT NOT NULL,
	"Status"	TEXT DEFAULT 'Pending',
	PRIMARY KEY("ID" AUTOINCREMENT),
	FOREIGN KEY("SenderID") REFERENCES "CLIENTS"("ID")
);
CREATE TABLE IF NOT EXISTS "Files" (
	"id"	INTEGER,
	"comment_id"	INTEGER,
	"file_path"	TEXT NOT NULL,
	PRIMARY KEY("id" AUTOINCREMENT),
	FOREIGN KEY("comment_id") REFERENCES "Comments"("id") ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS "LISTS" (
	"TaskID"	INTEGER,
	"TaskName"	TEXT NOT NULL,
	"IsChecked"	BOOLEAN,
	PRIMARY KEY("TaskID" AUTOINCREMENT)
);
CREATE TABLE IF NOT EXISTS "Projects" (
	"ProjectID"	INTEGER,
	"ProjectName"	TEXT NOT NULL,
	"ProjectDescription"	TEXT DEFAULT '',
	"ClientID"	INTEGER NOT NULL,
	PRIMARY KEY("ProjectID" AUTOINCREMENT),
	FOREIGN KEY("ClientID") REFERENCES "CLIENTS"("ID")
);
CREATE TABLE IF NOT EXISTS "ROLES" (
	"ID"	INTEGER,
	"NAME"	TEXT NOT NULL UNIQUE,
	PRIMARY KEY("ID" AUTOINCREMENT)
);
CREATE TABLE IF NOT EXISTS "SharedProject" (
	"ShareID"	INTEGER,
	"ProjectID"	INTEGER NOT NULL,
	"OwnerID"	INTEGER NOT NULL,
	"ClientID"	INTEGER,
	PRIMARY KEY("ShareID" AUTOINCREMENT),
	FOREIGN KEY("ClientID") REFERENCES "CLIENTS"("ID"),
	FOREIGN KEY("OwnerID") REFERENCES "CLIENTS"("ID"),
	FOREIGN KEY("ProjectID") REFERENCES "Projects"("ProjectID") ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS "SprintTasks" (
	"SprintTaskID"	INTEGER,
	"SprintID"	INTEGER NOT NULL,
	"TaskID"	INTEGER NOT NULL,
	PRIMARY KEY("SprintTaskID" AUTOINCREMENT),
	FOREIGN KEY("SprintID") REFERENCES "Sprints"("SprintID") ON DELETE CASCADE,
	FOREIGN KEY("TaskID") REFERENCES "Tasks"("TaskID") ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS "Sprints" (
	"SprintID"	INTEGER,
	"SprintName"	TEXT NOT NULL,
	"ProjectID"	INTEGER,
	"SprintColor"	TEXT,
	PRIMARY KEY("SprintID" AUTOINCREMENT),
	FOREIGN KEY("ProjectID") REFERENCES "Projects"("ProjectID")
);
CREATE TABLE IF NOT EXISTS "Tasks" (
	"TaskID"	INTEGER,
	"TaskName"	TEXT NOT NULL,
	"Priority"	TEXT,
	"Status"	TEXT,
	"StatusColor"	TEXT,
	"PriorityColor"	TEXT,
	"Owners"	TEXT,
	"DueDate"	DATE,
	"Tags"	TEXT,
	"Progress"	INTEGER,
	"ProjectID"	INTEGER,
	"SprintID"	INTEGER,
	"ClientID"	INTEGER,
	PRIMARY KEY("TaskID" AUTOINCREMENT),
	FOREIGN KEY("ClientID") REFERENCES "CLIENTS"("ID"),
	FOREIGN KEY("ProjectID") REFERENCES "Projects"("ProjectID") ON DELETE CASCADE,
	FOREIGN KEY("SprintID") REFERENCES "Sprints"("SprintID") ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS "WORKERS" (
	"ID"	INTEGER,
	"ManagerID"	INTEGER NOT NULL,
	"WorkerID"	INTEGER NOT NULL,
	"ProjectID"	INTEGER,
	PRIMARY KEY("ID" AUTOINCREMENT),
	UNIQUE("ManagerID","WorkerID","ProjectID"),
	FOREIGN KEY("ManagerID") REFERENCES "CLIENTS"("ID"),
	FOREIGN KEY("ProjectID") REFERENCES "Projects"("ProjectID") ON DELETE CASCADE,
	FOREIGN KEY("WorkerID") REFERENCES "CLIENTS"("ID")
);
CREATE TABLE IF NOT EXISTS "WORKER_REQUESTS" (
	"ID"	INTEGER,
	"SenderID"	INTEGER NOT NULL,
	"ReceiverEmail"	TEXT NOT NULL,
	"Status"	TEXT DEFAULT 'Pending',
	PRIMARY KEY("ID" AUTOINCREMENT),
	FOREIGN KEY("SenderID") REFERENCES "CLIENTS"("ID")
);
INSERT INTO "CLIENTS" VALUES (1,'Lucy','8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92','Lucy@gmail.com',1,NULL);
INSERT INTO "ROLES" VALUES (1,'Private User');
INSERT INTO "ROLES" VALUES (2,'Worker');
INSERT INTO "ROLES" VALUES (3,'Manager');
COMMIT;
